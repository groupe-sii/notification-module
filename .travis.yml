language: java
dist: trusty
sudo: required
addons:
  apt:
    packages:
      - graphviz
  sonarcloud:
    organization: aurelien-baudet-github
branches:
  except:
  - gh-.*


before_install:
  - set -o pipefail

jobs:
  include:
    - stage: "Build"
      jdk: oraclejdk8
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: openjdk8
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: oraclejdk9
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: openjdk9
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: openjdk10
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: oraclejdk11
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: openjdk11
      script:
        - ci/./build.sh
    - stage: "Build"
      jdk: openjdk12
      script:
        - ci/./build.sh
    
    - stage: test
      name: "Unit Tests (oraclejdk8)"
      jdk: oraclejdk8
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (openjdk8)"
      jdk: openjdk8
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (oraclejdk9)"
      jdk: oraclejdk9
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (openjdk9)"
      jdk: openjdk9
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (openjdk10)"
      jdk: openjdk10
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (oraclejdk11)"
      jdk: oraclejdk11
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (openjdk11)"
      jdk: openjdk11
      script: ci/./run-unit-tests.sh
    - stage: test
      name: "Unit Tests (openjdk12)"
      jdk: openjdk12
      script: ci/./run-unit-tests.sh

    - stage: test
      name: "Integration Tests (oraclejdk8)"
      jdk: oraclejdk8
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (openjdk8)"
      jdk: openjdk8
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (oraclejdk9)"
      jdk: oraclejdk9
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (openjdk9)"
      jdk: openjdk9
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (openjdk10)"
      jdk: openjdk10
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (oraclejdk11)"
      jdk: oraclejdk11
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (openjdk11)"
      jdk: openjdk11
      script: ci/./run-integration-tests.sh
    - stage: test
      name: "Integration Tests (openjdk12)"
      jdk: openjdk12
      script: ci/./run-integration-tests.sh

    - stage: test
      name: "Classpath Tests (oraclejdk8)"
      jdk: oraclejdk8
      script:
        - TEST_FOLDER=JAVA_8 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_8 INITIALIZER_NAME=spring-initializr-older-versions INITIALIZER_PORT=8052 INITIALIZER_ARGS='-Dspring-boot.version=1.5.21.RELEASE -Dspring-initializr.version=0.4.0.RELEASE -Drun.jvmArguments="-Dspring.profiles.active=older-versions"' GENERATION_ARGS="-Dspring.profiles.active=older-versions" ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_8 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (openjdk8)"
      jdk: openjdk8
      script:
        - TEST_FOLDER=JAVA_8 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_8 INITIALIZER_NAME=spring-initializr-older-versions INITIALIZER_PORT=8052 INITIALIZER_ARGS='-Dspring-boot.version=1.5.21.RELEASE -Dspring-initializr.version=0.4.0.RELEASE -Drun.jvmArguments="-Dspring.profiles.active=older-versions"' GENERATION_ARGS="-Dspring.profiles.active=older-versions" ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_8 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (oraclejdk9)"
      jdk: oraclejdk9
      script: 
        - TEST_FOLDER=JAVA_9 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_9 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (openjdk9)"
      jdk: openjdk9
      script: 
        - TEST_FOLDER=JAVA_9 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_9 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (openjdk10)"
      jdk: openjdk10
      script: 
        - TEST_FOLDER=JAVA_10 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_10 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (oraclejdk11)"
      jdk: oraclejdk11
      script:
        - TEST_FOLDER=JAVA_11 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_11 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (openjdk11)"
      jdk: openjdk11
      script:
        - TEST_FOLDER=JAVA_11 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_11 ci/./run-classpath-tests.sh
    - stage: test
      name: "Classpath Tests (openjdk12)"
      jdk: openjdk12
      script: 
        - TEST_FOLDER=JAVA_12 INITIALIZER_NAME=spring-initializr INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh
        - TEST_FOLDER=JAVA_12 ci/./run-classpath-tests.sh

    - stage: "Analyze"
      jdk: oraclejdk8
      script:
        - ci/./analyze.sh
    
    - stage: "Javadoc"
      jdk: oraclejdk8
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: openjdk8
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: oraclejdk9
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: openjdk9
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: openjdk10
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: oraclejdk11
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: openjdk11
      script:
        - ci/./generate-javadoc.sh
    - stage: "Javadoc"
      jdk: openjdk12
      script:
        - ci/./generate-javadoc.sh

    - stage: "Deploy"
      jdk: oraclejdk8
      script: 
        - ./mvnw clean install deploy --settings .travis-settings.xml -DskipTests=true -B | grep -Ei '(Uploading|Downloading|Uploaded|Downloaded)'
      
stages:
  - name: "Build"
  - name: test
  - name: "Javadoc"
  - name: "Analyze"
  - name: "Deploy"
    if:  branch = master

notifications:
  slack:
    rooms:
      - secure: NdaSwFJ16HC93H1iimYB07/0rGwQfVCto2/XLrVJNeMcvdRsHbuhBnKwwUkNCTLeLLtB1DVmoNeCBdo2pmtAvoyTnl9OXhG3GWjoB++Al+/66x/TzC1g891y59JI/F7btVqZRKMi5URdcXt7VqSTUyu3Qjf6rxxeRMfiCgg4eLP2ABWQTvNpi7AgV9ArkVqat5Fo1p98iuxpUL0kByXmyuoN15f0azVm0Mhwv2LtMyHAf5Lq1gKOt7TfKccMEJaZXPZMfFWkXblZUWggx6EYXB2ylXJ7e45UeunsroqPYuXJtepwOjcT00NSm7tR+wDaVZl3hXDfexwb35wP+g/tcIiQYTWgQQvr5b6Z0tUX3WgZt7aBMH9gaJPRolC7FXwukXkdBwjvyDLsra147M2pm7fc5zj73TV0gaEdqDewd+UgFA12Vm1gwC0eWH/HVhOZ0HGOQdYmtYkZJ67KTwes9B+SKDkrSF4Nq7T3svOWvGxzDCaw4CCOBY5U1xRc3VVOo/xtFa8dAKfxpo0IFy/qaHS4vIb2BDHJ0LU7+WarcjcmADxJXvhvOvvByS5k0sqkUXF4uB+QpxQqQEGNMzLC2iMog0UnBIIEZEe6pvrzchoQIpKyom4GvnAi+Xco8aJaMgrLZY9JwmlLP8r1YFyMawH4kmJ8XpPZ5+fIN2HSkD4=
    template:
      - "*[%{result}]* %{branch}"
      - "Build: <%{build_url}|#%{build_number}> (%{duration})"
      - "Commit: <%{compare_url}|%{commit}> by %{author}"
      - "%{commit_message}"

cache:
  directories:
    - $HOME/.m2
before_cache:
  - rm -rf $HOME/.m2/repository/fr/sii
  