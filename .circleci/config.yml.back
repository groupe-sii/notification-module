aliases:
  - &save-m2-cache
    paths:
      - ~/.m2
    key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
    
  - &restore-m2-cache
    keys:
      - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - maven-repo-v1-{{ .Branch }}-
      - maven-repo-v1-
    
  - &save-pit-history
    paths:
      - ~/.pitest_history
    key: pit-history-{{ .Branch }}-<<parameters.module>>-<<parameters.part>>-{{ epoch }}
    
  - &restore-pit-history
    keys:
#      - pit-history-{{ .Branch }}-<<parameters.module>>-<<parameters.part>>-
      - pit-history-{{ .Branch }}-<<parameters.module>>-
      - pit-history-{{ .Branch }}
      - pit-history-
    
  - &restore-workspace
    at: '~'
  - &save-for-next-step
    root: '~'
    paths:
      - project/*/target/pit-reports
      
defaults: &defaults
  docker:
    - image: circleci/openjdk:8-jdk
  environment:
    # -Xmx3g => many OOM
    # -Xmx2g => sometimes OOM
    JAVA_TOOL_OPTIONS: '-Xmx1600m'

commands:
  run-mutation-tests:
    parameters:
      module:
        type: string
      engine:
        default: 'gregor'
        type: string
      mutators:
        default: ''
        type: string
      part:
        default: 1
        type: integer
    steps:
      - restore_cache: *restore-m2-cache
      - restore_cache: *restore-pit-history
      - run: mkdir -p ~/.pitest_history
      - run: ls -l ~/.pitest_history
      - run: find ~/.pitest_history/ -name "*_pitest_history.bin" -exec cp -f '{}' /tmp/ \;
      - run: ls -l /tmp
      - attach_workspace: *restore-workspace
      - run: ci/./build-pitest.sh
      - run:
#          command: ci/./run-single-module-mutation-tests.sh "<<parameters.module>>" "<<parameters.engine>>" "<<parameters.mutators>>" "~/.pitest_history"
          command: ci/./run-single-module-mutation-tests.sh "<<parameters.module>>" "<<parameters.engine>>" "<<parameters.mutators>>"
          no_output_timeout: 1h
      - persist_to_workspace: *save-for-next-step
      - run: ls -l /tmp
      - run: mkdir -p ~/.pitest_history
      - run: find /tmp/ -name "*_pitest_history.bin" -exec cp -f '{}' ~/.pitest_history \;
      - run: ls -l ~/.pitest_history
      - save_cache: *save-pit-history

version: 2.1
orbs:
  slack: circleci/slack@3.2.0
  docker: circleci/docker@1.4.0
jobs:
  #--------------------------------------------
  # build pitest (with report aggregation fix)
  # TODO: remove when pull request merged
  #--------------------------------------------
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-m2-cache
      - run: ci/./build-pitest.sh
      - save_cache: *save-m2-cache
  
  #--------------------------------------------
  # run mutation testing on each module
  #--------------------------------------------
  mutation-tests:
    <<: *defaults
    parameters:
      module:
        type: string
      engine:
        default: 'gregor'
        type: string
      mutators:
        default: ''
        type: string
      part:
        default: 1
        type: integer
    steps:
      - checkout
      - run-mutation-tests:
          module: <<parameters.module>>
          engine: <<parameters.engine>>
          mutators: <<parameters.mutators>>
          part: <<parameters.part>>
       
  #--------------------------------------------
  # generate reports documentation and site
  #--------------------------------------------
  generate-documentation:
    machine: true
    environment:
      JAVA_TOOL_OPTIONS: '-Xmx4096m'
      MAVEN_OPTS: '-Xmx4096m'
    steps:
#      - run:
#          name: Install Docker Compose
#          command: |
#            set -x
#            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#            chmod +x /usr/local/bin/docker-compose
#      - setup_remote_docker
      - checkout
      - restore_cache: *restore-m2-cache
      #- restore_cache: *restore-pit-history
      - attach_workspace: *restore-workspace
      - run: ci/./build-pitest.sh
      - run:
          name: Generate reports and documentation
          command: ci/./generate-documentation.sh
      - run:
          name: Generate showcase video
          command: ci/./generate-showcase-video.sh
      - persist_to_workspace:
          root: '~'
          paths:
            - project/*/target
            - project/target
      #- save_cache: *save-pit-history

  #--------------------------------------------
  # export for next build
  #--------------------------------------------
  export:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-m2-cache
      - attach_workspace: *restore-workspace
      #--------------------------------------------
      # save/update cache
      #--------------------------------------------
      - run: rm -rf ~/.m2/repository/fr/sii
      - save_cache: *save-m2-cache
      #--------------------------------------------
      # store build information
      #--------------------------------------------
      - store_test_results:
          path: .

  #--------------------------------------------
  # upload
  #--------------------------------------------
  deploy:
    docker:
      - image: alpine/git
    steps:
      - checkout
      - restore_cache: *restore-m2-cache
      - attach_workspace: *restore-workspace
      - add_ssh_keys:
          fingerprints:
            - "9a:b0:42:93:73:3e:35:21:62:23:48:eb:79:88:17:d5"
      #--------------------------------------------
      # deploy to Github Pages
      #--------------------------------------------
      - run: ci/./deploy-dev-reports.sh $CIRCLE_BRANCH
  notify:
    docker:
      - image: circleci/node:7.10
    steps:
      - slack/status:
          success_message: "*[success]* ${CIRCLE_JOB} Documentation and reports:
          
          * <https://aurelien-baudet.github.io/ogham-dev-reports/${CIRCLE_BRANCH}/index.html|Generated site>
          
          * <https://aurelien-baudet.github.io/ogham-dev-reports/${CIRCLE_BRANCH}/jacoco-aggregate/index.html|JaCoCo>
          
          * <https://codecov.io/gh/groupe-sii/ogham/branch/${CIRCLE_BRANCH}|Codecov>
          
          * <https://aurelien-baudet.github.io/ogham-dev-reports/${CIRCLE_BRANCH}/pit-reports/index.html|Mutation testing>"

workflows:
  generate-documentation:
    jobs:
      - prepare
      - mutation-tests:
          name: ogham-test-utils
          module: ogham-test-utils
          requires:
            - prepare
      - mutation-tests:
          name: ogham-core
          module: ogham-core
          requires:
            - prepare
      - mutation-tests:
          name: ogham-template-thymeleaf-common
          module: ogham-template-thymeleaf-common
          requires:
            - prepare
      - mutation-tests:
          name: ogham-template-thymeleaf-v2
          module: ogham-template-thymeleaf-v2
          requires:
            - prepare
      - mutation-tests:
          name: ogham-template-thymeleaf-v3
          module: ogham-template-thymeleaf-v3
          requires:
            - prepare
#      - ogham-template-thymeleaf:
#          requires:
#            - prepare
      - mutation-tests:
          name: ogham-template-freemarker
          module: ogham-template-freemarker
          requires:
            - prepare
      - mutation-tests:
          name: ogham-email-javamail
          module: ogham-email-javamail
          requires:
            - prepare
#      - ogham-email-sendgrid-common:
#          requires:
#            - prepare
      - mutation-tests:
          name: ogham-email-sendgrid-v2
          module: ogham-email-sendgrid-v2
          requires:
            - prepare
      - mutation-tests:
          name: ogham-email-sendgrid-v4
          module: ogham-email-sendgrid-v4
          requires:
            - prepare
#      - ogham-email-sendgrid:
#          requires:
#            - prepare
      - mutation-tests:
          name: ogham-sms-cloudhopper
          module: ogham-sms-cloudhopper
          requires:
            - prepare
      - mutation-tests:
          name: ogham-sms-ovh
          module: ogham-sms-ovh
          requires:
            - prepare
      - mutation-tests:
          name: ogham-sms-smsglobal
          module: ogham-sms-smsglobal
          requires:
            - prepare
      - mutation-tests:
          name: ogham-all-part-1
          module: ogham-all
          mutators: "CONDITIONALS_BOUNDARY,INCREMENTS,INVERT_NEGS,MATH,NEGATE_CONDITIONALS"
          part: 1
          requires:
            - prepare
      - mutation-tests:
          name: ogham-all-part-2
          module: ogham-all
          mutators: "CONDITIONALS_BOUNDARY,INCREMENTS,INVERT_NEGS,MATH,NEGATE_CONDITIONALS,VOID_METHOD_CALLS"
          part: 2
          requires:
            - ogham-all-part-1
      - mutation-tests:
          name: ogham-all-part-3
          module: ogham-all
          mutators: "CONDITIONALS_BOUNDARY,INCREMENTS,INVERT_NEGS,MATH,NEGATE_CONDITIONALS,VOID_METHOD_CALLS,EMPTY_RETURNS,FALSE_RETURNS,TRUE_RETURNS,NULL_RETURNS,PRIMITIVE_RETURNS"
          part: 3
          requires:
            - ogham-all-part-2
      - mutation-tests:
          name: ogham-spring-boot-v1-autoconfigure
          module: ogham-spring-boot-v1-autoconfigure
          requires:
            - prepare
      - mutation-tests:
          name: ogham-spring-boot-v2-autoconfigure
          module: ogham-spring-boot-v2-autoconfigure
          requires:
            - prepare
      - generate-documentation:
          requires:
            - ogham-test-utils
            - ogham-core
            - ogham-template-thymeleaf-common
            - ogham-template-thymeleaf-v2
            - ogham-template-thymeleaf-v3
#            - ogham-template-thymeleaf
            - ogham-template-freemarker
            - ogham-email-javamail
#            - ogham-email-sendgrid-common
            - ogham-email-sendgrid-v2
            - ogham-email-sendgrid-v4
#            - ogham-email-sendgrid
            - ogham-sms-cloudhopper
            - ogham-sms-ovh
            - ogham-sms-smsglobal
            - ogham-all-part-3
            - ogham-spring-boot-v1-autoconfigure
            - ogham-spring-boot-v2-autoconfigure
      - export:
          requires:
            - generate-documentation
      - deploy:
          requires:
            - export
      - notify:
          requires:
            - deploy
