name: Generate documentation
description: "Generate documentation"
inputs:
  ogham-version:
    description: "The Ogham version for the generated documentation"
    required: false
    default: ""
  git-branch:
    description: "The Git branch for the Ogham version"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: "Build custom Pitest version"
      shell: bash
      run: |
        echo "::group::Build pitest"
        ci/./build-pitest.sh
        echo "::endgroup::"
      env:
        DEBUG_COMMANDS: ${{ runner.debug }}
    - name: "Restore Pitest reports generated by each module - download"
      uses: actions/download-artifact@v3
      with:
        path: ${{ runner.temp }}
    - name: "Restore Pitest reports generated by each module - extract"
      shell: bash
      run: for file in `find '${{ runner.temp }}' -name 'pit-reports-*.tar.gz' -type f`; do tar -xzf "$file"; done
    - name: "Generate reports and documentation"
      #        uses: nick-fields/retry@v2
      #        with:
      #          timeout_minutes: 120
      #          max_attempts: 3
      #          command: |
      shell: bash
      run: |
        VERSION="$([[ -z '${{ inputs.ogham-version }}' ]] && echo '' || echo "'-Ddoc.ogham.version=${{ inputs.ogham-version }}'")"
        BRANCH="$([[ -z '${{ inputs.git-branch }}' ]] && echo '' || echo "'-Dgit.branch=${{ inputs.git-branch }}'")"
        ARGS="$VERSION $BRANCH"
        export JAVA_TOOL_OPTIONS='-Xmx4096m'
        export MAVEN_OPTS='-Xmx4096m'

        ci/./generate-documentation.sh $ARGS
        
        if [[ ! -z "${{ runner.debug }}" ]]
        then
          echo "::group::target directory content"
          tree target
          echo "::endgroup::"
        fi
      env:
        DEBUG_COMMANDS: ${{ runner.debug }}
    - name: "Save generated documentation"
      uses: ./.github/actions/archive-and-upload
      with:
        working-directory: target
        file-pattern: "site/**"
        artifact-name: documentation
    - name: "Generate showcase video"
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: ci/./generate-showcase-video.sh
      env:
        DEBUG_COMMANDS: ${{ runner.debug }}
    - name: "Save generated documentation with showcase video"
      uses: ./.github/actions/archive-and-upload
      with:
        working-directory: target
        file-pattern: "site/**"
        artifact-name: documentation-with-showcase
    - name: "Save build output"
      uses: ./.github/actions/archive-and-upload
      with:
        file-pattern: "**/target/**"
        artifact-name: maven-build
