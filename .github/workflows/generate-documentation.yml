name: Documentation

on:
  push:
    branches-ignore:
      - 'gh-*'

jobs:
  mutation-tests:
    runs-on: ubuntu-18.04
    strategy:
      matrix: 
        module:
          - ogham-test-utils
          - ogham-core
          - ogham-template-thymeleaf-common
          - ogham-template-thymeleaf-v2
          - ogham-template-thymeleaf-v3
          - ogham-template-freemarker
          - ogham-email-javamail
          - ogham-email-sendgrid-v2
          - ogham-email-sendgrid-v4
          - ogham-sms-cloudhopper
          - ogham-sms-ovh
          - ogham-sms-smsglobal
          - ogham-all
          - ogham-spring-boot-v1-autoconfigure
          - ogham-spring-boot-v2-autoconfigure
    name: "Mutation testing [${{ matrix.module }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: Cache Pitest history
        uses: actions/cache@v2
        with:
          path: /tmp/*_pitest_history.bin
          key: ${{ runner.os }}-pitest-${{ matrix.module }}-${{ secrets.PITEST_CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-pitest-${{ matrix.module }}-${{ secrets.PITEST_CACHE_VERSION }}
      - name: "Build custom Pitest version"
        run: ci/./build-pitest.sh
      - name: "Run mutation tests"
        run: ci/./run-single-module-mutation-tests.sh ${{ matrix.module }} gregor
      - name: "Save Pitest reports - archive"
        run: tar -czf /tmp/pit-reports-${{ matrix.module }}.tar.gz ${{ matrix.module }}/target/pit-reports
      - name: "Save Pitest reports - upload"
        uses: actions/upload-artifact@v2
        with:
          name: pit-reports-${{ matrix.module }}
          path: /tmp/pit-reports-${{ matrix.module }}.tar.gz
        
  generate-documentation:
    needs: [mutation-tests]
    runs-on: ubuntu-18.04
    name: "Generate documentation and site"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Build custom Pitest version"
        run: ci/./build-pitest.sh
      - name: "Restore Pitest reports generated by each module - download"
        uses: actions/download-artifact@v2
        with:
          path: /tmp
      - name: "Restore Pitest reports generated by each module - extract"
        run: for file in `find /tmp -name 'pit-reports-*.tar.gz' -type f`; do tar -xzf "$file"; done
      - name: "Generate reports and documentation"
#        uses: nick-invision/retry@v2
#        with:
#          timeout_minutes: 120
#          max_attempts: 3
#          command: |
        run: |
            export JAVA_TOOL_OPTIONS='-Xmx4096m'
            export MAVEN_OPTS='-Xmx4096m'
            ci/./generate-documentation.sh
      - name: "Generate showcase video"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: ci/./generate-showcase-video.sh
      - name: "Save generated documentation - archive"
        run: cd target && tar -czf /tmp/generated-documentation.tar.gz site       
      - name: "Save generated documentation - upload"
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: /tmp/generated-documentation.tar.gz
        
  deploy:
    needs: [generate-documentation]
    environment: dev
    runs-on: ubuntu-18.04
    name: "Deploy documentation"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Restore generated documentation - download"
        uses: actions/download-artifact@v2
        with:
          name: documentation
          path: /tmp
      - name: "Restore generated documentation - extract"
        run: |
          mkdir target
          tar -xzf /tmp/generated-documentation.tar.gz -C target
      - name: "Clone ogham-dev-reports"
        uses: actions/checkout@v2
        with:
          repository: aurelien-baudet/ogham-dev-reports
          path: ogham-dev-reports
          token: ${{ secrets.DEV_REPORTS_GITHUB_TOKEN }}
      - name: "Add branch site to reports"
        run: |
          BRANCH="${GITHUB_REF#refs/heads}"
          ci/./deploy-dev-reports.sh $BRANCH ${{ github.workspace }}/ogham-dev-reports
        
  slack-success:
    if: success()
    needs: [deploy]
    runs-on: ubuntu-18.04
    name: "Slack"
    steps:
      - run: echo "BRANCH=${GITHUB_REF#refs/heads}" >> $GITHUB_ENV
      - run: echo "BRANCH=$BRANCH"
      - uses: 8398a7/action-slack@v3
        with:
          text: |
            :white_check_mark: *[docs]* ${{ env.BRANCH }}
            
            > Generated docs and reports:
            > • <https://aurelien-baudet.github.io/ogham-dev-reports/${{ env.BRANCH }}/index.html|Generated site>
            > • <https://aurelien-baudet.github.io/ogham-dev-reports/${{ env.BRANCH }}/jacoco-aggregate/index.html|JaCoCo>
            > • <https://codecov.io/gh/groupe-sii/ogham/branch/${{ env.BRANCH }}|Codecov>
            > • <https://aurelien-baudet.github.io/ogham-dev-reports/${{ env.BRANCH }}/pit-reports/index.html|Mutation testing>
            
          status: success
          fields: workflow,ref,message
          icon_url: https://github.com/groupe-sii/ogham/raw/master/src/site/resources/img/ogham-blue-256x256.png
          author_name: ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  slack-failure:
    if: failure()
    needs: [deploy]
    runs-on: ubuntu-18.04
    name: "Slack"
    steps:
      - run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - uses: 8398a7/action-slack@v3
        with:
          text: |
            :x: *[docs]* ${{ env.BRANCH }}
          status: failure
          fields: workflow,ref,message
          icon_url: https://github.com/groupe-sii/ogham/raw/master/src/site/resources/img/ogham-blue-256x256.png
          username: 'documentation & reports'
          author_name: ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

