name: Build

on:
  push:
    branches-ignore:
      - 'gh-*'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy on Maven repository'
        default: 'false'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Build [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Build"
        uses: ./.github/actions/build
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Save maven repository for analysis"
        if: always()
        uses: ./.github/actions/archive-and-upload
        with:
          working-directory: ~/.m2/repository
          file-pattern: "**"
          artifact-name: build--maven-repository--${{ matrix.os }}
      - name: "Save maven output for analysis"
        if: always()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: build--maven-output--${{ matrix.os }}

  unit-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Unit Tests [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Unit Tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw package
              '-Dmaven.javadoc.skip=true'
              '-Dmaven.test.redirectTestOutputToFile=true'
              -fae
              -B
      - name: "Save maven output for analysis"
        if: failure()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: unit-tests--maven-output--${{ matrix.os }}
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Unit Tests [${{ matrix.os }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  integration-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Integration Tests [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Integration Tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw verify
              '-Dmaven.javadoc.skip=true'
              '-Dskip.unit.tests=true'
              '-Dmaven.test.redirectTestOutputToFile=true'
              -fae
              -B
      - name: "Save maven output for analysis"
        if: failure()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: integration-tests--maven-output--${{ matrix.os }}
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Integration Tests [${{ matrix.os }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  javadoc:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    name: "Javadoc [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Build"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install
              '-Dmaven.test.redirectTestOutputToFile=true'
              -B
      - name: "Generate javadoc"
        run:
          ./mvnw javadoc:javadoc
          -fae
          -B
      - name: "Save maven output for analysis"
        if: failure()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: javadoc--maven-output--${{ matrix.os }}

  analyze-sonar:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    name: "Sonar"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Analyze"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install sonar:sonar
              -Dmaven.test.redirectTestOutputToFile=true
              -Dsonar.projectKey=fr.sii.ogham:ogham-parent
              -Dsonar.organization=aurelien-baudet-github
              -Dsonar.host.url=https://sonarcloud.io
              -Dsonar.login=$SONAR_TOKEN
              -B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: "Save maven output for analysis"
        if: failure()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: analyze-sonar--maven-output--${{ matrix.os }}

  analyze-codecov:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    name: "Codecov"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Build and test"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install
              -Dmaven.test.redirectTestOutputToFile=true
              -B
      - name: "Analyze"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: "Save maven output for analysis"
        if: failure()
        uses: ./.github/actions/archive-and-upload
        with:
          file-pattern: "**/target/**"
          artifact-name: analyze-codecov--maven-output--${{ matrix.os }}


  classpath-tests-standalone:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 17]
        java-distribution: [temurin, zulu, adopt, adopt-openj9, liberica, corretto, semeru]
        os: [ubuntu-latest]
        include:
          - { java: 16, java-distribution: temurin, os: ubuntu-latest }
          - { java: 18, java-distribution: temurin, os: ubuntu-latest }
          - { java: 19, java-distribution: temurin, os: ubuntu-latest }
          - { java: 20, java-distribution: temurin, os: ubuntu-latest }
          - { java: 13, java-distribution: zulu, os: ubuntu-latest }
          - { java: 15, java-distribution: zulu, os: ubuntu-latest }
          - { java: 19, java-distribution: zulu, os: ubuntu-latest }
          - { java: 20, java-distribution: zulu, os: ubuntu-latest }
          - { java: 20, java-distribution: liberica, os: ubuntu-latest }
          - { java: 11, java-distribution: microsoft, os: ubuntu-latest }
          - { java: 17, java-distribution: microsoft, os: ubuntu-latest }
          - { java: 20, java-distribution: corretto, os: ubuntu-latest }
          - { java: 16, java-distribution: semeru, os: ubuntu-latest }
          - { java: 18, java-distribution: semeru, os: ubuntu-latest }
          - { java: 19, java-distribution: semeru, os: ubuntu-latest }
          - { java: 17, java-distribution: oracle, os: ubuntu-latest }
          - { java: 20, java-distribution: oracle, os: ubuntu-latest }
    name: "Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }} ${{ matrix.java-distribution }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          java-distribution: ${{ matrix.java-distribution }}
          run-tests-directory-name: standalone
          report-name: "Report - Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }} ${{ matrix.java-distribution }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-1-4-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8]
        os: [ubuntu-latest]
        spring-boot: [1.4.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}
          generation-profile: older-versions
          initializr-port: 8052
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-1-5-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8]
        os: [ubuntu-latest]
        spring-boot: [1.5.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-1-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.1.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-2-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.2.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-3-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.3.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-4-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.4.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-5-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.5.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-6-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        os: [ubuntu-latest]
        spring-boot: [2.6.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} ({{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-2-7-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 17]
        os: [ubuntu-latest]
        spring-boot: [2.7.x]
        variant: [dependency-management-fix, explicit-dependencies-fix]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}---${{ matrix.variant }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} (${{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  classpath-tests-spring-boot-3-x-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/') || !!vars.RUN_SPRING_BOOT_CLASSPATH_TESTS
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        os: [ubuntu-latest]
        spring-boot: [3.0.x, 3.1.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v3
      - name: "Generate and run classpath tests"
        uses: ./.github/actions/classpath-tests
        with:
          java-version: ${{ matrix.java }}
          run-tests-directory-name: spring-boot-${{ matrix.spring-boot }}
          part: ${{ matrix.part }}
          report-name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          cache-version: ${{ vars.CACHE_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch' && fromJson(github.event.inputs.deploy))
    needs:
      - classpath-tests-standalone
      - classpath-tests-spring-boot-1-4-x
      - classpath-tests-spring-boot-1-5-x
      - classpath-tests-spring-boot-2-1-x
      - classpath-tests-spring-boot-2-2-x
      - classpath-tests-spring-boot-2-3-x
      - classpath-tests-spring-boot-2-4-x
      - classpath-tests-spring-boot-2-5-x
      - classpath-tests-spring-boot-2-6-x
      - classpath-tests-spring-boot-2-7-x
      - classpath-tests-spring-boot-3-x-x
      - javadoc
      - analyze-sonar
      - analyze-codecov
    runs-on: ubuntu-latest
    name: "Deploy"
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Java and Maven"
        uses: ./.github/actions/setup-java-and-maven
        with:
          cache-version: ${{ vars.CACHE_VERSION }}
      - name: "Deploy on OSS"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run:
          ./mvnw clean install deploy
            --settings .github/deploy-settings.xml
            -DskipTests=true
            -B

  slack:
    if: always()
    needs: [deploy]
    runs-on: ubuntu-latest
    name: "Slack"
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - run: >
          ICON=$(
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "success" ] && echo ":white_check_mark:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "failure" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "timed_out" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "cancelled" ] && echo ":heavy_multiplication_x:") || 
            echo ":interrobang:"
           )
           echo "STATUS_ICON=$ICON" >> $GITHUB_ENV
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: workflow,ref,message
          username: 'build'
          author_name: ''
          icon_url: https://github.com/groupe-sii/ogham/raw/master/src/site/resources/img/ogham-blue-256x256.png
          text: |
            ${{ env.STATUS_ICON }} _${{ env.BRANCH }}_
            ${{ github.event.head_commit.message }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    