name: Build

on:
  push:
    branches-ignore:
      - 'gh-*'
      - 'docs/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        os: [ubuntu-latest]#, windows-latest]
    name: "Build [${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Build"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./mvnw clean install '-DskipTests=true' '-Dmaven.javadoc.skip=true' -B
        
  unit-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        os: [ubuntu-latest]#, windows-latest]
    name: "Unit Tests [${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Unit Tests"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./mvnw test '-Dmaven.javadoc.skip=true' '-Dmaven.test.redirectTestOutputToFile=true' -fae -B
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Unit Tests [${{ matrix.os }} - Java ${{ matrix.java }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
                  
  integration-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        os: [ubuntu-latest]#, windows-latest]
    name: "Integration Tests [${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Integration Tests"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./mvnw verify '-Dmaven.javadoc.skip=true' '-Dskip.unit.tests=true' '-Dmaven.test.redirectTestOutputToFile=true' -fae -B
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Integration Tests [${{ matrix.os }} - Java ${{ matrix.java }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  javadoc:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        os: [ubuntu-latest]#, windows-latest]
    name: "Javadoc [${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Generate javadoc"
        run: ci/./generate-javadoc.sh

  analyze-sonar:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-18.04
    name: "Sonar"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Analyze"
        run: ./mvnw clean install sonar:sonar -Dmaven.test.redirectTestOutputToFile=true -Dsonar.projectKey=fr.sii.ogham:ogham-parent -Dsonar.organization=aurelien-baudet-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# TODO: make codecov work
#  analyze-codecov:
#    needs: [unit-tests, integration-tests]
#    runs-on: ubuntu-18.04
#    name: "Codecov"
#    steps:
#      - uses: actions/checkout@v2
#      - name: "Analyze"
#        run: bash <(curl -s https://codecov.io/bash)


  classpath-tests-standalone:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 9, 10, 11, 12, 13, 14, 15]
        os: [ubuntu-18.04]
    name: "Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        run: TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
      - name: "Run tests"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/standalone ci/./run-classpath-tests.sh
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-legacy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8]
        os: [ubuntu-18.04]
        spring-boot: [1.4.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8052 ci/./generate-classpath-tests.sh older-versions || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
        
  classpath-tests-spring-boot:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        java: [8, 11, 12, 13, 14, 15]
        os: [ubuntu-18.04]
        spring-boot: [2.2.x, 2.3.x, 2.4.x]
        part: [1/5, 2/5, 3/5, 4/5, 5/5]
        include:
          - { java: 8, os: ubuntu-18.04, spring-boot: 1.5.x, part: 1/5 }
          - { java: 8, os: ubuntu-18.04, spring-boot: 1.5.x, part: 2/5 }
          - { java: 8, os: ubuntu-18.04, spring-boot: 1.5.x, part: 3/5 }
          - { java: 8, os: ubuntu-18.04, spring-boot: 1.5.x, part: 4/5 }
          - { java: 8, os: ubuntu-18.04, spring-boot: 1.5.x, part: 5/5 }
          - { java: 11, os: ubuntu-18.04, spring-boot: 2.1.x, part: 1/5 }
          - { java: 11, os: ubuntu-18.04, spring-boot: 2.1.x, part: 2/5 }
          - { java: 11, os: ubuntu-18.04, spring-boot: 2.1.x, part: 3/5 }
          - { java: 11, os: ubuntu-18.04, spring-boot: 2.1.x, part: 4/5 }
          - { java: 11, os: ubuntu-18.04, spring-boot: 2.1.x, part: 5/5 }
          - { java: 12, os: ubuntu-18.04, spring-boot: 2.1.x, part: 1/5 }
          - { java: 12, os: ubuntu-18.04, spring-boot: 2.1.x, part: 2/5 }
          - { java: 12, os: ubuntu-18.04, spring-boot: 2.1.x, part: 3/5 }
          - { java: 12, os: ubuntu-18.04, spring-boot: 2.1.x, part: 4/5 }
          - { java: 12, os: ubuntu-18.04, spring-boot: 2.1.x, part: 5/5 }
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ matrix.java }}-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [classpath-tests-standalone, classpath-tests-spring-boot-legacy, classpath-tests-spring-boot, javadoc, analyze-sonar]#, analyze-codecov]
    runs-on: ubuntu-18.04
    name: "Deploy"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Deploy on OSS"
        run: ./mvnw clean install deploy --settings .github/deploy-settings.xml -DskipTests=true -B | grep -Ei '(Uploading|Downloading|Uploaded|Downloaded)'
      
  slack:
    if: always()
    needs: [deploy]
    runs-on: ubuntu-18.04
    name: "Slack"
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - run: >
          ICON=$(
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "success" ] && echo ":white_check_mark:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "failure" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "timed_out" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "cancelled" ] && echo ":heavy_multiplication_x:") || 
            echo ":interrobang:"
           )
           
           echo "STATUS_ICON=$ICON" >> $GITHUB_ENV
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: workflow,ref,message
          username: 'build'
          author_name: ''
          icon_url: https://github.com/groupe-sii/ogham/raw/master/src/site/resources/img/ogham-blue-256x256.png
          text: |
            ${{ env.STATUS_ICON }} _${{ env.BRANCH }}_
            ${{ github.event.head_commit.message }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    