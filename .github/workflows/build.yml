name: Build

on:
  push:
    branches-ignore:
      - 'gh-*'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy on Maven repository'
        default: 'false'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Build [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: |
            8
            17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Build"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install
              '-DskipTests=true'
              '-Dmaven.javadoc.skip=true'
              -B
#      - name: "Save Maven repository for analysis - archive"
#        if: always()
#        run: tar -czf ${{ runner.temp }}/maven-repository.tar.gz ~/.m2/repository
#      - name: "Save Maven repository for analysis - upload"
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-maven-repository-${{ matrix.os }}
#          path: ${{ runner.temp }}/maven-repository.tar.gz
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: tar -czf ${{ runner.temp }}/maven-output.tar.gz $( find -name "target" -type d )
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-maven-output-${{ matrix.os }}
          path: ${{ runner.temp }}/maven-output.tar.gz

  unit-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Unit Tests [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: |
            8
            17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Unit Tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw package
              '-Dmaven.javadoc.skip=true'
              '-Dmaven.test.redirectTestOutputToFile=true'
              -fae
              -B
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          find -name "target" -type d
          tar -czf ${{ runner.temp }}/maven-output.tar.gz $( find -name "target" -type d )
          ls -l ${{ runner.temp }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-maven-output-${{ matrix.os }}
          path: ${{ runner.temp }}/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Unit Tests [${{ matrix.os }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  integration-tests:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: "Integration Tests [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: |
            8
            17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Integration Tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw verify
              '-Dmaven.javadoc.skip=true'
              '-Dskip.unit.tests=true'
              '-Dmaven.test.redirectTestOutputToFile=true'
              -fae
              -B
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          find -name "target" -type d
          tar -czf ${{ runner.temp }}/maven-output.tar.gz $( find -name "target" -type d )
          ls -l ${{ runner.temp }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: integration-tests-maven-output-${{ matrix.os }}
          path: ${{ runner.temp }}/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Integration Tests [${{ matrix.os }}]"
          report_paths: ./**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  javadoc:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    name: "Javadoc [${{ matrix.os }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: |
            8
            17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}
      - name: "Build"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install
              '-Dmaven.test.redirectTestOutputToFile=true'
              -B
      - name: "Generate javadoc"
        run:
          ./mvnw javadoc:javadoc
          -fae
          -B
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: javadoc-maven-output-${{ matrix.os }}
          path: /tmp/maven-output.tar.gz

  analyze-sonar:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-18.04
    name: "Sonar"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: |
            8
            17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Analyze"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install sonar:sonar
              -Dmaven.test.redirectTestOutputToFile=true
              -Dsonar.projectKey=fr.sii.ogham:ogham-parent
              -Dsonar.organization=aurelien-baudet-github
              -Dsonar.host.url=https://sonarcloud.io
              -Dsonar.login=$SONAR_TOKEN
              -B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: analyze-sonar-maven-output
          path: /tmp/maven-output.tar.gz

  analyze-codecov:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-18.04
    name: "Codecov"
    steps:
      - uses: actions/checkout@v2
      - name: "Build and test"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command:
            ./mvnw clean install
              -Dmaven.test.redirectTestOutputToFile=true
              -B
      - name: "Analyze"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: analyze-codecov-maven-output
          path: /tmp/maven-output.tar.gz


  classpath-tests-standalone:
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 9, 10, 11, 12, 13, 14, 15, 17]
        os: [ubuntu-18.04]
    name: "Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        run: TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/standalone ci/./run-classpath-tests.sh
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/standalone
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-maven-output-${{ matrix.os }}-java-${{ matrix.java }}-standalone
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Standalone - ${{ matrix.os }} - Java ${{ matrix.java }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-1-4-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8]
        os: [ubuntu-18.04]
        spring-boot: [1.4.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8052 ci/./generate-classpath-tests.sh older-versions || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - run: |
          ESCAPED_PART="${PART/\//-}"
          echo "ESCAPED_PART=$ESCAPED_PART" >> $GITHUB_ENV
        env:
          PART: ${{ matrix.part }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-maven-output-${{ matrix.os }}-java-${{ matrix.java }}-spring-boot-${{ matrix.spring-boot }}-${{ env.ESCAPED_PART }}
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-1-5-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8]
        os: [ubuntu-18.04]
        spring-boot: [1.5.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - run: |
          ESCAPED_PART="${PART/\//-}"
          echo "ESCAPED_PART=$ESCAPED_PART" >> $GITHUB_ENV
        env:
          PART: ${{ matrix.part }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-spring-output-${{ matrix.os }}-java-${{ matrix.java }}-spring-boot-${{ matrix.spring-boot }}-${{ env.ESCAPED_PART }}
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-2-1-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 12]
        os: [ubuntu-18.04]
        spring-boot: [2.1.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - run: |
          ESCAPED_PART="${PART/\//-}"
          echo "ESCAPED_PART=$ESCAPED_PART" >> $GITHUB_ENV
        env:
          PART: ${{ matrix.part }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-spring-output-${{ matrix.os }}-java-${{ matrix.java }}-spring-boot-${{ matrix.spring-boot }}-${{ env.ESCAPED_PART }}
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-2-x-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 12, 13, 14, 15, 17]
        os: [ubuntu-18.04]
        spring-boot: [2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x, 2.7.x]
        variant: [dependency-management, explicit-dependencies]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} ({{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}---{{ matrix.variant }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}---{{ matrix.variant }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}---{{ matrix.variant }}
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - run: |
          ESCAPED_PART="${PART/\//-}"
          echo "ESCAPED_PART=$ESCAPED_PART" >> $GITHUB_ENV
        env:
          PART: ${{ matrix.part }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-spring-output-${{ matrix.os }}-java-${{ matrix.java }}-spring-boot-${{ matrix.spring-boot }}---{{ matrix.variant }}-${{ env.ESCAPED_PART }}
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} ({{ matrix.variant }}) - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  classpath-tests-spring-boot-3-0-x:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/ci/')
    needs: [unit-tests, integration-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        os: [ubuntu-18.04]
        spring-boot: [3.0.x]
        part: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    name: "Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Generate projects"
        id: generate-projects
        run: |
          TEST_FOLDER=JAVA_${{ matrix.java }} INITIALIZER_PORT=8050 ci/./generate-classpath-tests.sh || { sleep 10s; exit 1; }
          PROJECT_LIST=$(ci/./generate-project-list.sh JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ${{ matrix.part }})
          echo "::set-output name=PROJECT_LIST::$PROJECT_LIST"
      - name: "Run tests"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: TEST_FOLDER=JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }} ci/./run-classpath-tests.sh -pl ${{ steps.generate-projects.outputs.PROJECT_LIST }}
      - name: "Save Maven outuput for analysis - archive"
        if: failure()
        run: |
          cd ~/classpath-tests/JAVA_${{ matrix.java }}/spring-boot-${{ matrix.spring-boot }}
          find -name "target" -type d
          tar -czf /tmp/maven-output.tar.gz $( find -name "target" -type d )
      - run: |
          ESCAPED_PART="${PART/\//-}"
          echo "ESCAPED_PART=$ESCAPED_PART" >> $GITHUB_ENV
        env:
          PART: ${{ matrix.part }}
      - name: "Save Maven outuput for analysis - upload"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: classpath-tests-spring-output-${{ matrix.os }}-java-${{ matrix.java }}-spring-boot-${{ matrix.spring-boot }}-${{ env.ESCAPED_PART }}
          path: /tmp/maven-output.tar.gz
      - name: "Publish Tests Results"
        uses: scacap/action-surefire-report@v1.0.5
        if: always()
        with:
          check_name: "Report - Classpath Tests [Spring Boot ${{ matrix.spring-boot }} - ${{ matrix.os }} - Java ${{ matrix.java }}] [${{ matrix.part }}]"
          report_paths: ~/classpath-tests/**/TEST-*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

  deploy:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch' && fromJson(github.event.inputs.deploy))
    needs:
      - classpath-tests-standalone
      - classpath-tests-spring-boot-1-4-x
      - classpath-tests-spring-boot-1-5-x
      - classpath-tests-spring-boot-2-1-x
      - classpath-tests-spring-boot-2-x-x
      - classpath-tests-spring-boot-3-0-x
      - javadoc
      - analyze-sonar
      - analyze-codecov
    runs-on: ubuntu-18.04
    name: "Deploy"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/fr/sii/
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}
      - name: "Deploy on OSS"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run:
          ./mvnw clean install deploy
            --settings .github/deploy-settings.xml
            -DskipTests=true
            -B

  slack:
    if: always()
    needs: [deploy]
    runs-on: ubuntu-18.04
    name: "Slack"
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - run: >
          ICON=$(
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "success" ] && echo ":white_check_mark:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "failure" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "timed_out" ] && echo ":x:") || 
            ([ "${{env.WORKFLOW_CONCLUSION}}" = "cancelled" ] && echo ":heavy_multiplication_x:") || 
            echo ":interrobang:"
           )
           echo "STATUS_ICON=$ICON" >> $GITHUB_ENV
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: workflow,ref,message
          username: 'build'
          author_name: ''
          icon_url: https://github.com/groupe-sii/ogham/raw/master/src/site/resources/img/ogham-blue-256x256.png
          text: |
            ${{ env.STATUS_ICON }} _${{ env.BRANCH }}_
            ${{ github.event.head_commit.message }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    