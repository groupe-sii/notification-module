<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.sii.ogham</groupId>
	<artifactId>ogham-parent</artifactId>
	<version>2.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>ogham</name>
	<description>
		The message is important, not how you send it
	</description>
	<url>${project.url}</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Java version -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Dependencies -->
		<commons-io.version>2.5</commons-io.version>
		<commons-beanutils.version>1.9.3</commons-beanutils.version>
		<thymeleaf.version>2.1.5.RELEASE</thymeleaf.version>
		<freemarker.version>2.3.25-incubating</freemarker.version>
		<javamail.version>1.5.6</javamail.version>
		<slf4j.version>1.7.24</slf4j.version>
		<logback.version>1.1.11</logback.version>
		<commons-lang.version>3.5</commons-lang.version>
		<cloudhopper.version>5.0.9</cloudhopper.version>
		<cloudhopper-gsm.version>3.0.0</cloudhopper-gsm.version>
		<jsmpp.version>2.3.4</jsmpp.version>
		<jsoup.version>1.10.2</jsoup.version>
		<commons-codec.version>1.10</commons-codec.version>
		<sendgrid-java.version>2.2.2</sendgrid-java.version>
		<commons-logging.version>1.2</commons-logging.version>
		<libphonenumber.version>8.3.2</libphonenumber.version>
		<tika.version>1.14</tika.version>
		<javax-activation.version>1.2.0</javax-activation.version>
		<jackson.version>2.8.7</jackson.version>
		<reflections.version>0.9.11</reflections.version>
		<guava.version>20.0</guava.version>
		<httpclient.version>4.5.3</httpclient.version>
		<spring.boot.version>1.5.3.RELEASE</spring.boot.version>
		<!-- Dependencies - tests -->
		<junit.version>4.12</junit.version>
		<xmlunit.version>1.6</xmlunit.version>
		<mockito.version>1.10.19</mockito.version>
		<cloning.version>1.9.3</cloning.version>
		<greenmail.version>1.5.3</greenmail.version>
		<equalsverifier.version>3.1.9</equalsverifier.version>
		<wiremock.version>2.5.1</wiremock.version>
		<hamcrest.version>1.3</hamcrest.version>
		<spock.version>1.1-groovy-2.4</spock.version>
		<!-- Dependencies - documentation -->
		<asciidoctorj-diagram.version>1.5.16</asciidoctorj-diagram.version>
		<asciidoctorj.version>1.5.6</asciidoctorj.version>
		<asciidoctorj-monotree.version>0.0.1</asciidoctorj-monotree.version>
		<bootstrap.version>4.3.1</bootstrap.version>
		<bootswatch.version>4.2.1</bootswatch.version>

		<!-- Code coverage -->
		<jacoco.it.execution.data.file>${project.basedir}/../target/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${project.basedir}/../target/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>
		<skip.integration.tests>false</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>

		<!-- Sonar properties -->
		<sonar.jacoco.reportPaths>${jacoco.ut.execution.data.file},${jacoco.it.execution.data.file}</sonar.jacoco.reportPaths>
		<sonar.language>java</sonar.language>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

		<!-- URL -->
		<github.url>https://github.com/groupe-sii/ogham</github.url>
		<git.branch>master</git.branch>
		<github.code.url>${github.url}/blob/${git.branch}</github.code.url>
		<project.url>https://groupe-sii.github.io/ogham/</project.url>
		<scm.url>git@github.com:groupe-sii/ogham.git</scm.url>
		<site.url>http://groupe-sii.github.io/ogham</site.url>
		<site.deploy.url>gitsite:git@github.com/groupe-sii/ogham.git</site.deploy.url>

		<!-- Documentation -->
		<docProjectVersion>${project.version}</docProjectVersion>
		<dependency.locations.enabled>false</dependency.locations.enabled>
		<site.staging.dir>${project.build.outputDirectory}/staging</site.staging.dir>
		<site.output.dir>${site.staging.dir}/v${docProjectVersion}</site.output.dir>
		<doc-theme>cerulean</doc-theme>

		<!-- Plugins -->
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-source-plugin.version>3.1.0</maven-source-plugin.version>
		<!-- Plugins - tests -->
		<jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
		<!-- Plugins - documentation -->
		<maven-site-plugin.version>3.7</maven-site-plugin.version>
		<maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
		<reflow-skin.version>2.0.2</reflow-skin.version>
		<velocity.version>1.7</velocity.version>
		<asciidoctor-plugin.version>1.5.6</asciidoctor-plugin.version>
		<sass-maven-plugin.version>3.7.2</sass-maven-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<!-- Plugins - code quality -->
		<sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
		<!-- Plugins - release -->
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<gmavenplus-plugin.version>1.7.0</gmavenplus-plugin.version>
		<maven-scm-provider-gitexe.version>1.11.2</maven-scm-provider-gitexe.version>
		<maven-scm-manager-plexus.version>1.11.2</maven-scm-manager-plexus.version>
		<wagon-gitsite.version>0.5</wagon-gitsite.version>
		<maven-replacer-plugin.version>1.5.2</maven-replacer-plugin.version>
	</properties>


	<modules>
		<module>ogham-core</module>
		<module>ogham-template-thymeleaf</module>
		<module>ogham-template-freemarker</module>
		<module>ogham-email-javamail</module>
		<module>ogham-email-sendgrid</module>
		<module>ogham-sms-cloudhopper</module>
		<module>ogham-sms-ovh</module>
		<module>ogham-sms-smsglobal</module>
		<module>ogham-all</module>
		<module>ogham-spring-boot-autoconfigure</module>
		<module>ogham-spring-boot-starter-all</module>
		<module>ogham-spring-boot-starter-email</module>
		<module>ogham-spring-boot-starter-sms</module>
		<module>ogham-test-utils</module>
		<module>ogham-test-classpath</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Mail -->
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${javamail.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>javax.mail-api</artifactId>
				<version>${javamail.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sendgrid</groupId>
				<artifactId>sendgrid-java</artifactId>
				<version>${sendgrid-java.version}</version>
			</dependency>

			<!-- SMS -->
			<dependency>
				<groupId>com.cloudhopper</groupId>
				<artifactId>ch-smpp</artifactId>
				<version>${cloudhopper.version}</version>
			</dependency>
			<dependency>
				<groupId>com.cloudhopper</groupId>
				<artifactId>ch-commons-gsm</artifactId>
				<version>${cloudhopper-gsm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jsmpp</groupId>
				<artifactId>jsmpp</artifactId>
				<version>${jsmpp.version}</version>
			</dependency>


			<!-- Utility -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>${reflections.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>

			<!-- Template parsers -->
			<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf</artifactId>
				<version>${thymeleaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- MimeType detection -->
			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>${tika.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.activation</groupId>
				<artifactId>javax.activation</artifactId>
				<version>${javax-activation.version}</version>
			</dependency>

			<!-- CSS inliners -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>

			<!-- Logs -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- Tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail</artifactId>
				<version>${greenmail.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.jqno.equalsverifier</groupId>
				<artifactId>equalsverifier</artifactId>
				<version>${equalsverifier.version}</version>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>${xmlunit.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.com.robust-it</groupId>
				<artifactId>cloning</artifactId>
				<version>${cloning.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.tomakehurst</groupId>
				<artifactId>wiremock</artifactId>
				<version>${wiremock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>${spock.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- IDE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${maven-eclipse-plugin.version}</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- The gmavenplus plugin is used to compile Groovy code used by Spock 
				framework -->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${gmavenplus-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- Generate sources and javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Used for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<includes>
						<include>**/ut/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Used for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>

							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/it/**/*.java</include>
							</includes>
							<!-- Combine with unit test reports for Sonar -->
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Asciidoctor documentation -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor-plugin.version}</version>
				<inherited>false</inherited>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>${asciidoctorj-diagram.version}</version>
					</dependency>
					<dependency>
						<groupId>com.github.allati.asciidoctor.monotree</groupId>
						<artifactId>asciidoctor-extension-monotree</artifactId>
						<version>${asciidoctorj-monotree.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>post-site</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<sourceDirectory>${basedir}/src/docs/asciidoc</sourceDirectory>
							<backend>html</backend>
							<doctype>book</doctype>
							<preserveDirectories>true</preserveDirectories>
							<imagesDir />
							<sourceHighlighter>coderay</sourceHighlighter>
							<embedAssets>false</embedAssets>
							<templateDir>${basedir}/src/docs/resources/templates</templateDir>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
							<attributes>
								<toc>left</toc>
								<icons>font</icons>
								<tabsize>3</tabsize>
								<linkcss>true</linkcss>
								<sectanchors>true</sectanchors>
								<docinfo2>true</docinfo2>
								<experimental>true</experimental>
								<tabsize>4</tabsize>
								<imagesdir />
								<ogham-version>${docProjectVersion}</ogham-version>
								<docdir>${basedir}/src/docs/asciidoc</docdir>
								<templatesdir>${basedir}/src/docs/resources/templates</templatesdir>
								<sourcedir-url>${github.code.url}</sourcedir-url>
								<sourcedir>${basedir}</sourcedir>
								<site-url>${site.url}</site-url>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Copy doc resources (images, styles, js) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-asciidoc-resources</id>
						<phase>post-site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/docs/resources</directory>
								</resource>
							</resources>
							<outputDirectory>target/generated-docs</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-asciidoc-resources-for-site</id>
						<phase>post-site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>target/generated-docs</directory>
								</resource>
							</resources>
							<outputDirectory>target/site</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>io.github.devacfr.maven.skins</groupId>
						<artifactId>reflow-velocity-tools</artifactId>
						<version>${reflow-skin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor-plugin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>${asciidoctorj-diagram.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<generateReports>true</generateReports>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<stagingDirectory>${site.output.dir}</stagingDirectory>
					<asciidoc>
						<baseDir>${basedir}/src/docs/asciidoc</baseDir>
						<preserveDirectories>true</preserveDirectories>
						<imagesDir />
						<sourceHighlighter>coderay</sourceHighlighter>
						<embedAssets>false</embedAssets>
						<requires>
							<require>asciidoctor-diagram</require>
						</requires>
						<attributes>
							<source-highlighter>coderay</source-highlighter>
							<nofooter>true</nofooter>
							<toc>left</toc>
							<icons>font</icons>
							<tabsize>3</tabsize>
							<linkcss>true</linkcss>
							<sectanchors>true</sectanchors>
							<docinfo2>true</docinfo2>
							<experimental>true</experimental>
							<tabsize>4</tabsize>
							<imagesdir />
							<ogham-version>${docProjectVersion}</ogham-version>
							<badges-branch>${git.branch}</badges-branch>
							<docdir>${basedir}/src/docs/asciidoc</docdir>
							<templatesdir>${basedir}/src/docs/resources/templates</templatesdir>
							<sourcedir-url>${github.code.url}</sourcedir-url>
							<sourcedir>${basedir}</sourcedir>
							<site-url>${site.url}</site-url>
						</attributes>
					</asciidoc>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>unpack</id>
						<inherited>false</inherited>
						<phase>pre-site</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>io.github.devacfr.maven.skins</groupId>
									<artifactId>reflow-default-webdeps</artifactId>
									<version>${reflow-skin.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<includes>
										**/css/fontawesome/**/*,
										**/css/themes/${doc-theme}/*.css,
										**/js/*.js,
										**/js/languages/*,
										**/js/styles/github.min.css
									</includes>
									<outputDirectory>${session.executionRootDirectory}/target/site</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj</artifactId>
									<version>${asciidoctorj.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<includes>
										/gems/asciidoctor-*/data/stylesheets/*,
									</includes>
									<outputDirectory>${session.executionRootDirectory}/target/unpacked</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>bootstrap</artifactId>
									<version>${bootstrap.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<includes>
										**/*.scss
									</includes>
									<outputDirectory>${session.executionRootDirectory}/target/unpacked</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>bootswatch-${doc-theme}</artifactId>
									<version>${bootswatch.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<includes>
										**/*.scss
									</includes>
									<outputDirectory>${session.executionRootDirectory}/target/unpacked</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-scss-dependencies</id>
						<inherited>false</inherited>
						<phase>pre-site</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="target/generated-scss/asciidoctor">
									<fileset dir="target/unpacked/gems">
										<include name="**/*.css" />
									</fileset>
									<regexpmapper from="^.*/(.+)\.css$$" to="_\1.scss" />
								</copy>
								<copy todir="target/generated-scss/bootstrap">
									<fileset dir="target/unpacked">
										<include name="**/bootstrap/**/*.scss" />
									</fileset>
									<regexpmapper from="^.*/scss/(.+/)*_?(.+\.scss)$$" to="\1_\2" />
								</copy>
								<copy todir="target/generated-scss/bootswatch-${doc-theme}">
									<fileset dir="target/unpacked">
										<include name="**/bootswatch-${doc-theme}/**/*.scss" />
									</fileset>
									<regexpmapper from="^.*/(.+\.scss)$$" to="\1" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>nl.geodienstencentrum.maven</groupId>
				<artifactId>sass-maven-plugin</artifactId>
				<version>${sass-maven-plugin.version}</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>compile-sass</id>
						<phase>pre-site</phase>
						<goals>
							<goal>update-stylesheets</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Add resources in order to import files like it was in same source 
						folder -->
					<resources>
						<resource>
							<source>
								<directory>src/docs/resources</directory>
							</source>
							<destination>${project.build.directory}/ignored</destination>
						</resource>
						<resource>
							<source>
								<directory>target/generated-scss</directory>
							</source>
							<destination>${project.build.directory}/ignored</destination>
						</resource>
						<resource>
							<source>
								<directory>src/site/scss</directory>
							</source>
							<destination>${project.build.directory}/site/css</destination>
						</resource>
					</resources>
				</configuration>
			</plugin>

			<!-- Release -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<preparationGoals>com.google.code.maven-replacer-plugin:replacer:replace
						-N</preparationGoals>
					<completionGoals>com.google.code.maven-replacer-plugin:replacer:replace
						-N</completionGoals>
				</configuration>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-provider-gitexe</artifactId>
				<version>${maven-scm-provider-gitexe.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-manager-plexus</artifactId>
				<version>${maven-scm-manager-plexus.version}</version>
			</extension>
			<extension>
				<groupId>com.github.stephenc.wagon</groupId>
				<artifactId>wagon-gitsite</artifactId>
				<version>${wagon-gitsite.version}</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<doclint>all</doclint>
						<additionalDependencies>
							<additionalDependency>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot</artifactId>
								<version>${spring.boot.version}</version>
							</additionalDependency>
							<additionalDependency>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-autoconfigure</artifactId>
								<version>${spring.boot.version}</version>
							</additionalDependency>
							<additionalDependency>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring.boot.version}</version>
							</additionalDependency>
						</additionalDependencies>
					</configuration>
				</plugin>

				<!-- Version update in samples too -->
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>${maven-replacer-plugin.version}</version>
					<configuration>
						<includes>
							<include>*/pom.xml</include>
						</includes>
						<regex>true</regex>
						<token>&lt;ogham\.version&gt;[^$&lt;]+&lt;/ogham\.version&gt;</token>
						<value>&lt;ogham.version&gt;${project.version}&lt;/ogham.version&gt;</value>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- FIXME: This is required since Eclipse 4.11 as GGTS is not supported. 
					Groovy Eclipse plugin doesn't work with maven test dependencies: https://github.com/groovy/groovy-eclipse/issues/900. 
					For now, Eclipse m2e Groovy plugin should not be installed. With this configuration, 
					everything works fine even with JUnit in Eclipse except that Eclipse Groovy 
					reports compilation errors. These errors can be ignored -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmavenplus
										</groupId>
										<artifactId>
											gmavenplus-plugin
										</artifactId>
										<versionRange>
											[0.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>compileTests</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<!-- Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<site>
			<id>gh-pages</id>
			<name>Deployment on Github</name>
			<url>${site.deploy.url}</url>
		</site>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter</name>
			<url>https://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>skip-tests</id>
			<activation>
				<property>
					<name>skipTests</name>
				</property>
			</activation>
			<properties>
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- Deployment on maven central -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging-maven-plugin.version}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-jdk9+</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<maven.compiler.release>8</maven.compiler.release>
			</properties>
		</profile>
	</profiles>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Aurélien Baudet</name>
			<email>aurelien.baudet@gmail.com</email>
			<url>https://github.com/aurelien-baudet</url>
			<organization>Groupe SII</organization>
			<organizationUrl>http://www.groupe-sii.com</organizationUrl>
		</developer>
	</developers>

	<scm>
		<url>${github.url}</url>
		<connection>scm:git:${scm.url}</connection>
		<developerConnection>scm:git:${scm.url}</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<url>${github.url}/issues</url>
		<system>GitHub</system>
	</issueManagement>
</project>
